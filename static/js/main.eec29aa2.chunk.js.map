{"version":3,"sources":["components/Navigation.tsx","App.tsx","components/Tab/Tab.tsx","components/Tabs/Tabs.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","cn","Navigation","className","to","App","Tab","tab","selectTabId","isTabSelected","id","title","tabs","content","Tabs","useParams","tabId","selectTab","find","map","Root","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"kPAGMA,EAAe,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SACtB,OAAOC,IAAG,cACR,CACE,YAAaD,GAElB,EAEYE,EAAa,WACxB,OACE,qBACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEC,GAAG,IACHD,UAAWJ,EAFb,kBAMA,cAAC,IAAD,CACEK,GAAG,QACHD,UAAWJ,EAFb,wBAUT,EC5BYM,EAAM,kBACjB,qCAEE,cAAC,EAAD,IACA,qBAAKF,UAAU,UAAf,SACE,cAAC,IAAD,QALa,ECSNG,G,KAAuB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,YACpCC,EAAgBF,EAAIG,KAAOF,EAEjC,OACE,mCACE,oBAEE,UAAQ,MACRL,UAAWF,IAAG,CAAE,YAAaQ,IAH/B,SAKE,cAAC,IAAD,CAAML,GAAE,gBAAWG,EAAIG,IAAvB,SACGH,EAAII,SALFJ,EAAIG,KAUhB,GC5BKE,EAAO,CACX,CAAEF,GAAI,QAASC,MAAO,QAASE,QAAS,eACxC,CAAEH,GAAI,QAASC,MAAO,QAASE,QAAS,eACxC,CAAEH,GAAI,QAASC,MAAO,QAASE,QAAS,gBAG7BC,EAAO,WAClB,IACMN,EADYO,cAAVC,OACqB,GAEvBC,EAAYL,EAAKM,MAAK,SAAAX,GAAG,OAAIA,EAAIG,KAAOF,CAAf,IAE/B,OACE,sBAAKL,UAAU,YAAf,UAEE,oBAAIA,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGS,EAAKO,KAAI,SAAAZ,GACR,OAAO,cAAC,EAAD,CAAKA,IAAKA,EAAKC,YAAaA,GACpC,SAIHA,GACA,qBAAKL,UAAU,QAAQ,UAAQ,aAA/B,iCAKDK,GACC,qBAAKL,UAAU,QAAQ,UAAQ,aAA/B,gBACGc,QADH,IACGA,OADH,EACGA,EAAWJ,YAKrB,ECnCYO,EAAO,kBAClB,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CACEC,OAAK,EACLD,QAAS,oBAAInB,UAAU,QAAd,yBAEX,eAAC,IAAD,CAAOkB,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,SAGjC,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUlB,GAAG,SACzC,cAAC,IAAD,CAAOiB,KAAK,IAAIC,QAAS,oBAAInB,UAAU,QAAd,oCAdb,ECHpBqB,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,eAAe,Q","file":"static/js/main.eec29aa2.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => {\n  return cn('navbar-item',\n    {\n      'is-active': isActive,\n    });\n};\n\nexport const Navigation = () => {\n  return (\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getLinkClass}\n          >\n            Home\n          </NavLink>\n          <NavLink\n            to=\"/tabs\"\n            className={getLinkClass}\n          >\n            Tabs\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\n\nexport const App = () => (\n  <>\n    {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n    <Navigation />\n    <div className=\"section\">\n      <Outlet />\n    </div>\n  </>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\n\ninterface Item {\n  id: string,\n  title: string,\n  content: string,\n}\n\ntype Props = {\n  tab: Item,\n  selectTabId?: string,\n};\n\nexport const Tab: React.FC<Props> = ({ tab, selectTabId }) => {\n  const isTabSelected = tab.id === selectTabId;\n\n  return (\n    <>\n      <li\n        key={tab.id}\n        data-cy=\"Tab\"\n        className={cn({ 'is-active': isTabSelected })}\n      >\n        <Link to={`/tabs/${tab.id}`}>\n          {tab.title}\n        </Link>\n      </li>\n    </>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Tab } from '../Tab/Tab';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const Tabs = () => {\n  const { tabId } = useParams();\n  const selectTabId = tabId || '';\n\n  const selectTab = tabs.find(tab => tab.id === selectTabId);\n\n  return (\n    <div className=\"container\">\n\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            return <Tab tab={tab} selectTabId={selectTabId} />;\n          })}\n        </ul>\n      </div>\n\n      {!selectTabId && (\n        <div className=\"block\" data-cy=\"TabContent\">\n          Please select a tab\n        </div>\n      )}\n\n      {selectTabId && (\n        <div className=\"block\" data-cy=\"TabContent\">\n          {selectTab?.content}\n        </div>\n      )}\n    </div>\n  );\n};\n","import {\n  HashRouter, Route, Routes, Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const Root = () => (\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route\n          index\n          element={<h1 className=\"title\">Home page</h1>}\n        />\n        <Route path=\"tabs\">\n          <Route index element={<Tabs />} />\n          <Route path=\":tabId?\" element={<Tabs />} />\n        </Route>\n\n        <Route path=\"home\" element={<Navigate to=\"..\" />} />\n        <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n      </Route>\n    </Routes>\n  </HashRouter>\n);\n","import ReactDOM from 'react-dom';\nimport { Root } from './Root';\n\nReactDOM.render(<Root />,\n  document.getElementById('root'));\n"],"sourceRoot":""}